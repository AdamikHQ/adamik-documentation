{
  "openapi": "3.1.0",
  "info": {
    "title": "Adamik",
    "version": "0.1.0",
    "description": "Adamik API reference (still WIP)"
  },
  "servers": [
    {
      "url": "https://api.adamik.io"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/api/address/encode": {
      "post": {
        "tags": [
          "address"
        ],
        "description": "Encodes the public key based on the specified chain ID and returns true if the operation is successful, otherwise false.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "chainId": {
                    "type": "string"
                  },
                  "pubkey": {
                    "type": "string"
                  }
                },
                "required": [
                  "chainId",
                  "pubkey"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 OK - Returns true if the encoding is successful, otherwise false.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/address/validate": {
      "post": {
        "tags": [
          "address"
        ],
        "description": "Validates the specified address for the given chain ID, returning true if the address is valid, otherwise false.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "chainId": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  }
                },
                "required": [
                  "chainId",
                  "address"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 OK - Returns true if the address is valid for the specified chain ID, otherwise false.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      }
    },
    "/api/chains": {
      "get": {
        "tags": [
          "chains"
        ],
        "description": "Retrieves a list of all supported blockchain networks.",
        "responses": {
          "200": {
            "description": "200 OK - Returns a list of names for all supported blockchain networks.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chains": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "chains"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/chains/{chainId}": {
      "get": {
        "tags": [
          "chains"
        ],
        "description": "Retrieves detailed information about a specific blockchain network identified by chain ID.",
        "parameters": [
          {
            "in": "path",
            "name": "chainId",
            "description": "Chain ID",
            "schema": {
              "type": "string",
              "description": "Chain ID",
              "example": "cosmoshub"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200 OK - Successfully returns detailed data about the specified blockchain, including its identifier, name, family classification, supported units of currency, and additional configuration parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "enum": [
                        "algorand",
                        "cosmoshub",
                        "osmosis",
                        "cosmoshub-testnet",
                        "ethereum",
                        "sepolia",
                        "holesky",
                        "zksync",
                        "zksync-sepolia",
                        "injective-testnet",
                        "base",
                        "base-sepolia",
                        "optimism",
                        "optimism-sepolia",
                        "arbitrum",
                        "arbitrum-sepolia"
                      ]
                    },
                    "name": {
                      "type": "string"
                    },
                    "family": {
                      "type": "string"
                    },
                    "params": {}
                  },
                  "required": [
                    "id",
                    "name",
                    "family"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/chains/{chainId}/token/{tokenId}": {
      "get": {
        "tags": [
          "chains"
        ],
        "description": "Retrieves detailed information about a specific token for a blockchain network, identified by chain ID and token ID.",
        "parameters": [
          {
            "in": "path",
            "name": "chainId",
            "description": "Chain ID",
            "schema": {
              "type": "string",
              "description": "Chain ID",
              "example": "ethereum"
            },
            "required": true
          },
          {
            "in": "path",
            "name": "tokenId",
            "description": "Token ID. Format depends on the chain, e.g. contract address for EVM chains.",
            "schema": {
              "type": "string",
              "description": "Token ID. Format depends on the chain, e.g. contract address for EVM chains.",
              "example": "0xdAC17F958D2ee523a2206206994597C13D831ec7"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "200 OK - Successfully returns detailed data about the token on the specified blockchain.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chainId": {
                      "type": "string",
                      "enum": [
                        "algorand",
                        "cosmoshub",
                        "osmosis",
                        "cosmoshub-testnet",
                        "ethereum",
                        "sepolia",
                        "holesky",
                        "zksync",
                        "zksync-sepolia",
                        "injective-testnet",
                        "base",
                        "base-sepolia",
                        "optimism",
                        "optimism-sepolia",
                        "arbitrum",
                        "arbitrum-sepolia"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "ASA",
                        "ERC20"
                      ]
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "ticker": {
                      "type": "string"
                    },
                    "decimals": {
                      "type": "string"
                    },
                    "contractAddress": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "chainId",
                    "type",
                    "id",
                    "name",
                    "ticker",
                    "decimals"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/data/state": {
      "post": {
        "tags": [
          "data"
        ],
        "description": "Returns the account state for a specified address and chain ID, primarily focusing on available balances. Essential for wallet applications to display up-to-date balance information.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "chainId": {
                    "type": "string",
                    "minLength": 1
                  },
                  "address": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "chainId",
                  "address"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 OK - Returns the current balance information for the specified address and chain ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "chainId": {
                      "type": "string"
                    },
                    "balances": {
                      "type": "object",
                      "properties": {
                        "native": {
                          "type": "object",
                          "properties": {
                            "available": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "available"
                          ]
                        },
                        "tokens": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "tokenId": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "tokenId",
                              "value"
                            ]
                          }
                        }
                      },
                      "required": [
                        "native"
                      ]
                    }
                  },
                  "required": [
                    "chainId",
                    "balances"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/data/validators": {
      "post": {
        "tags": [
          "data"
        ],
        "description": "Lists validators for a specified chain ID, including their operational status and commission rates. Supports pagination through 'limit' and 'offset' parameters. Useful for delegation operations on proof-of-stake blockchains.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "chainId": {
                    "type": "string"
                  },
                  "limit": {
                    "type": "number"
                  },
                  "offset": {
                    "type": "number"
                  }
                },
                "required": [
                  "chainId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 OK - Returns a list of validators, their status, and commission details for the specified chain ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "logo": {
                      "type": "string"
                    },
                    "website": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "commission": {
                      "type": "number"
                    },
                    "maxCommission": {
                      "type": "number"
                    },
                    "raw": {}
                  },
                  "required": [
                    "address",
                    "name",
                    "website",
                    "status",
                    "commission"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/transaction/broadcast": {
      "post": {
        "tags": [
          "transaction"
        ],
        "description": "Broadcasts a signed transaction to the blockchain, crucial for submitting transactions like transfers, delegations, or reward claims. Returns a transaction receipt (hash) or error details.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction": {
                    "type": "object",
                    "properties": {
                      "plain": {
                        "type": "object",
                        "properties": {
                          "chainId": {
                            "type": "string",
                            "enum": [
                              "algorand",
                              "cosmoshub",
                              "osmosis",
                              "cosmoshub-testnet",
                              "ethereum",
                              "sepolia",
                              "holesky",
                              "zksync",
                              "zksync-sepolia",
                              "injective-testnet",
                              "base",
                              "base-sepolia",
                              "optimism",
                              "optimism-sepolia",
                              "arbitrum",
                              "arbitrum-sepolia"
                            ]
                          },
                          "mode": {
                            "type": "string",
                            "enum": [
                              "transfer",
                              "delegate"
                            ]
                          },
                          "senders": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "recipients": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "amount": {
                            "type": "string"
                          },
                          "useMaxAmount": {
                            "type": "boolean"
                          },
                          "fees": {
                            "type": "string"
                          },
                          "gas": {
                            "type": "string"
                          },
                          "nonce": {
                            "type": "string"
                          },
                          "memo": {
                            "type": "string"
                          },
                          "format": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "chainId",
                          "mode",
                          "senders",
                          "recipients"
                        ]
                      },
                      "encoded": {
                        "anyOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "object"
                          }
                        ]
                      },
                      "signature": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "plain",
                      "encoded",
                      "signature"
                    ]
                  }
                },
                "required": [
                  "transaction"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 OK - Returns a transaction receipt or error details if the transaction fails.",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "type": "object",
                      "properties": {
                        "hash": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "hash"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        }
                      },
                      "required": [
                        "error"
                      ]
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/transaction/encode": {
      "post": {
        "tags": [
          "transaction"
        ],
        "description": "Encodes transaction data into a format suitable for broadcasting. This function is pivotal for creating transactions that comply with the specific requirements of different blockchains.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction": {
                    "type": "object",
                    "properties": {
                      "plain": {
                        "type": "object",
                        "properties": {
                          "chainId": {
                            "type": "string",
                            "enum": [
                              "algorand",
                              "cosmoshub",
                              "osmosis",
                              "cosmoshub-testnet",
                              "ethereum",
                              "sepolia",
                              "holesky",
                              "zksync",
                              "zksync-sepolia",
                              "injective-testnet",
                              "base",
                              "base-sepolia",
                              "optimism",
                              "optimism-sepolia",
                              "arbitrum",
                              "arbitrum-sepolia"
                            ]
                          },
                          "mode": {
                            "type": "string",
                            "enum": [
                              "transfer",
                              "delegate"
                            ]
                          },
                          "senders": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "recipients": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "amount": {
                            "type": "string"
                          },
                          "useMaxAmount": {
                            "type": "boolean"
                          },
                          "fees": {
                            "type": "string"
                          },
                          "gas": {
                            "type": "string"
                          },
                          "nonce": {
                            "type": "string"
                          },
                          "memo": {
                            "type": "string"
                          },
                          "format": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "chainId",
                          "mode",
                          "senders",
                          "recipients"
                        ]
                      }
                    },
                    "required": [
                      "plain"
                    ]
                  }
                },
                "required": [
                  "transaction"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 OK - Returns the transaction data encoded into a blockchain-specific format, ready for broadcasting.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "transaction": {
                      "type": "object",
                      "properties": {
                        "plain": {
                          "type": "object",
                          "properties": {
                            "chainId": {
                              "type": "string",
                              "enum": [
                                "algorand",
                                "cosmoshub",
                                "osmosis",
                                "cosmoshub-testnet",
                                "ethereum",
                                "sepolia",
                                "holesky",
                                "zksync",
                                "zksync-sepolia",
                                "injective-testnet",
                                "base",
                                "base-sepolia",
                                "optimism",
                                "optimism-sepolia",
                                "arbitrum",
                                "arbitrum-sepolia"
                              ]
                            },
                            "mode": {
                              "type": "string",
                              "enum": [
                                "transfer",
                                "delegate"
                              ]
                            },
                            "senders": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "recipients": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "amount": {
                              "type": "string"
                            },
                            "useMaxAmount": {
                              "type": "boolean"
                            },
                            "fees": {
                              "type": "string"
                            },
                            "gas": {
                              "type": "string"
                            },
                            "nonce": {
                              "type": "string"
                            },
                            "memo": {
                              "type": "string"
                            },
                            "format": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "chainId",
                            "mode",
                            "senders",
                            "recipients"
                          ]
                        },
                        "encoded": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "plain",
                        "encoded"
                      ]
                    }
                  },
                  "required": [
                    "transaction"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/api/transaction/validate": {
      "post": {
        "tags": [
          "transaction"
        ],
        "description": "Validates a transaction's format and checks it against the blockchain's current state for potential errors or warnings. This pre-validation is critical for ensuring transaction success rates and for debugging transaction issues.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "transaction": {
                    "type": "object",
                    "properties": {
                      "plain": {
                        "type": "object",
                        "properties": {
                          "chainId": {
                            "type": "string",
                            "enum": [
                              "algorand",
                              "cosmoshub",
                              "osmosis",
                              "cosmoshub-testnet",
                              "ethereum",
                              "sepolia",
                              "holesky",
                              "zksync",
                              "zksync-sepolia",
                              "injective-testnet",
                              "base",
                              "base-sepolia",
                              "optimism",
                              "optimism-sepolia",
                              "arbitrum",
                              "arbitrum-sepolia"
                            ]
                          },
                          "mode": {
                            "type": "string",
                            "enum": [
                              "transfer",
                              "delegate"
                            ]
                          },
                          "senders": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "recipients": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "amount": {
                            "type": "string"
                          },
                          "useMaxAmount": {
                            "type": "boolean"
                          },
                          "fees": {
                            "type": "string"
                          },
                          "gas": {
                            "type": "string"
                          },
                          "nonce": {
                            "type": "string"
                          },
                          "memo": {
                            "type": "string"
                          },
                          "format": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "chainId",
                          "mode",
                          "senders",
                          "recipients"
                        ]
                      }
                    },
                    "required": [
                      "plain"
                    ]
                  }
                },
                "required": [
                  "transaction"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 OK - Provides validation results, including any errors or warnings related to the transaction.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    },
                    "warnings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    }
                  },
                  "required": [
                    "errors",
                    "warnings"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      }
    }
  }
}